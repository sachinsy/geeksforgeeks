package Tree;

import java.util.LinkedList;
import java.util.Queue;

class newNode { 
    int data; 
    newNode left, right; 
  
    public newNode(int item) { 
        data = item; 
        left = null; 
        right = null; 
    } 
} 
  
public class BreadthFirstOrderTraversal {
	 newNode root; 
	   public void LevelOrder()  
	    { 
	        Queue<newNode> queue = new LinkedList<newNode>(); 
	        queue.add(root); 
	        while (!queue.isEmpty())  
	        { 
	            newNode tempNode = queue.poll(); 
	            System.out.print(tempNode.data + " "); 
	            if (tempNode.left != null) { 
	                queue.add(tempNode.left); 
	            } 
	            if (tempNode.right != null) { 
	                queue.add(tempNode.right); 
	            } 
	        } 
	    } 
	  
	    public static void main(String args[])  
	    { 
	        BreadthFirstOrderTraversal tree_level = new BreadthFirstOrderTraversal(); 
	        tree_level.root = new newNode(1); 
	        tree_level.root.right = new newNode(2); 
	        tree_level.root.right.right = new newNode(5); 
	        tree_level.root.right.right.left = new newNode(3);
	        tree_level.root.right.right.right = new newNode(6); 
	        tree_level.root.right.right.left.right = new newNode(4);	  
	        tree_level.LevelOrder(); 
	        
	    } 
	} 



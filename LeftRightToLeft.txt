package Tree;

public class LeafRightToLeft {
	static class Node  
	{  
		int data;  
		Node left, right;  
	};  

	static Node newNode(int data)  
	{  
		Node temp = new Node();  
		temp.data = data;  
		temp.left = temp.right = null;  
		return temp;  
	}  

	// Function to print leaf  
	// nodes from right to left  
	static void traverseLeaves(Node root)  
	{  
		// If node is null, return  
		if (root == null)  
			return;  

		// If node is leaf node, print its data  
		if (root.left == null && root.right == null)  
		{  
			System.out.print( root.data +" ");  
			return;  
		}  

		// If right child exists, check for leaf  
		// recursively  
		if (root.right != null)  
			traverseLeaves(root.right);  

		// If left child exists, check for leaf  
		// recursively  
		if (root.left != null)  
			traverseLeaves(root.left);  
	}  

	public static void main(String args[]) 
	{  
		Node root = newNode(8);  
		root.left = newNode(3);  
		root.right = newNode(10);  
		root.left.left = newNode(1);  
		root.left.right = newNode(6);  
		root.right.right = newNode(14);
		root.left.right.left=newNode(4);
		root.left.right.right=newNode(7);
		root.right.right.left = newNode(13);  
		traverseLeaves(root);  
	}  

}
